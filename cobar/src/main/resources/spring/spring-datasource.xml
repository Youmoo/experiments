<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.2.xsd"
       default-lazy-init="false">

    <description>Spring数据源配置</description>

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>classpath:/db.properties</value>
        </property>
    </bean>

    <util:set id="shardSet" set-class="java.util.LinkedHashSet">
        <ref local="shard1"/>
        <ref local="shard2"/>
        <ref local="shard3"/>
    </util:set>

    <!-- 定义数据分片 -->
    <bean id="shard1" class="com.alibaba.cobarclient.Shard">
        <property name="id" value="partition0"/>
        <property name="dataSource" ref="dataSource1"/>
    </bean>
    <bean id="shard2" class="com.alibaba.cobarclient.Shard">
        <property name="id" value="partition1"/>
        <property name="dataSource" ref="dataSource2"/>
    </bean>
    <bean id="shard3" class="com.alibaba.cobarclient.Shard">
        <property name="id" value="partition2"/>
        <property name="dataSource" ref="dataSource3"/>
    </bean>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close" abstract="true">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="minPoolSize" value="1"/>
        <property name="maxPoolSize" value="400"/>
        <property name="maxIdleTime" value="120"/>
        <property name="acquireIncrement" value="2"/>
        <property name="maxStatements" value="0"/>
        <property name="initialPoolSize" value="4"/>
        <property name="idleConnectionTestPeriod" value="90"/>
        <property name="acquireRetryAttempts" value="10"/>
        <property name="breakAfterAcquireFailure" value="false"/>
        <property name="testConnectionOnCheckout" value="false"/>
        <property name="autoCommitOnClose" value="false"/>
    </bean>
    <bean id="dataSource1" parent="dataSource">
        <property name="jdbcUrl" value="${jdbc.url1}"/>
    </bean>
    <bean id="dataSource2" parent="dataSource">
        <property name="jdbcUrl" value="${jdbc.url2}"/>
    </bean>
    <bean id="dataSource3" parent="dataSource">
        <property name="jdbcUrl" value="${jdbc.url3}"/>
    </bean>

    <bean id="hashFunction" class="org.aaron.cobar.dao.router.HashFunction"></bean>
    <util:map id="functionsMap">
        <entry key="hash" value-ref="hashFunction">
        </entry>
    </util:map>

    <!-- 定义总router -->
    <bean id="router" class="com.alibaba.cobarclient.config.SimpleRouterFactoryBean">
        <property name="configLocations">
            <value>
                classpath:/dbRule/sharding-rules-on-namespace.xml
            </value>
        </property>
        <property name="functions" ref="functionsMap"></property>
        <property name="shards" ref="shardSet"></property>
    </bean>

    <!-- 事务配置 -->
    <bean id="transactionManager"
          class="com.alibaba.cobarclient.transaction.BestEffortMultiDataSourceTransactionManager">
        <property name="shards" ref="shardSet"/>
        <property name="transactionSynchronization" value="2"/>
    </bean>

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <!--  iBatis SQL map定义。                                                    -->
    <bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
        <!-- 这里配置的root默认的数据源,如果找不到数据库的话则到该数据源中查找 TODO 后面再去掉 root , 这里设置root 是为了调试bug的 -->
        <property name="dataSource" ref="dataSource1"/>
        <property name="configLocation">
            <value>classpath:/ibatis/sqlmap-config.xml</value>
        </property>
    </bean>

    <!-- 工程里一定要使用此工程模板，不能再使用ibatis原生的api，不然有的情况会不经过cobar的过滤 -->
    <bean id="sqlMapClientTemplate" class="com.alibaba.cobarclient.MysdalSqlMapClientTemplate">
        <property name="sqlMapClient" ref="sqlMapClient"/>
        <property name="shards" ref="shardSet"/>
        <property name="router" ref="router"></property>
    </bean>
</beans>